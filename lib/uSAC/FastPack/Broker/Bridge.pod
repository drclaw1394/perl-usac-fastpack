=head1 NAME

uSAC::FastPack::Broker::Bridge - Bridge between two brokers


=head1 SYNOPSIS

  my $broker= get_broker to use;

  my $bridge=uSAC::FastPack::Broker::Bridge::Sub_Class->new(...);
  
  # Forward messages broadcast from local broker to remote peer, matching as
  # per normal.
  # Any messages with topic/head will match an be serialized andforward to the
  #peer

  $broker->listen(undef,"topic/head", $bridge, "begin")

=head1 DESCRIPTION

Base class representing a bridge between two brokers. While the brokers can be
on the same process, the bridge allows auto matic parsing and serialising of
fastpack messages.


=head1 API

To keep things simple, the the API is very small. 

=head2 buffer_out_sub()

  $bridge->buffer_out_sub= sub {
    # Arguments are provided as([buffer],callback)
    
    # Write data to desired file, socket, etc
    $socket->write($_[0][0]);
    $_[1] and $_[1](); # callback when writing is complete
  };

Returns an lvalue for the user to assign a subroutine to process serialized data

=head2 on_read_handler()

  my $data=$socket->read_some_stuff();
  $bridge->on_read_handler->([$data],sub { ...});

  # arguments expected are (["data"],callback)

Returns the internal subroutine which feeds the parsing /decoding step


=head2 forward_message_sub

  $broker->forward_message_sub;

Returns the internal sub which is used to queue messages from the local broker.

It is used as the sub for a listener, matched like any other listener. 

The incident messages which match are encoded/serialized and presented by
calling the C<buffer_out_sub>





